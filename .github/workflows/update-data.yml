name: Update data

on:
  schedule:
    - cron: '35 11 * * *' # 6:35 PM tại Việt Nam

jobs:
  update-data:
    runs-on: ubuntu-22.04

    steps:
      # Bước 1: Clone repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Lấy toàn bộ lịch sử, cần thiết cho rebase

      # Bước 2: Cài đặt Python và cache thư viện
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      # Bước 3: Cài đặt các package từ requirements.txt
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Bước 4: Chạy script Python để update data
      - name: Update data
        run: python main.py

      # Bước 5: Lấy ngày hiện tại để dùng cho commit message
      - name: Get current date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Bước 6: Pull code mới nhất từ remote và rebase để tránh conflict
      - name: Pull latest changes
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git pull origin main --rebase || echo "No changes to rebase"

      # Bước 7: Kiểm tra xem có thay đổi gì sau khi update data không
      - name: Check for changes
        id: git-check
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes=true" >> $GITHUB_ENV
          else
            echo "changes=false" >> $GITHUB_ENV
          fi

      # Bước 8: Commit và push nếu có thay đổi
      - name: Commit and push changes
        if: env.changes == 'true'
        run: |
          git add .
          git commit -m "Updated data on ${{ env.date }}"
          git push origin main

      # Bước 9: Thông báo nếu không có thay đổi
      - name: No changes to commit
        if: env.changes == 'false'
        run: echo "No changes detected. Skipping push."
